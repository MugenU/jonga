{
  "name": "SPORCO",
  "tagline": "Sparse Optimisation Research Code",
  "body": "SParse Optimization Research COde (SPORCO)\r\n==========================================\r\n\r\nSPORCO is a Python package for solving optimisation problems with\r\nsparsity-inducing regularisation. These consist primarily of sparse\r\ncoding and dictionary learning problems, including convolutional sparse\r\ncoding and dictionary learning, but there is also support for other\r\nproblems such as Total Variation regularisation and Robust PCA. In the\r\ncurrent version all of the optimisation algorithms are based on the\r\nAlternating Direction Method of Multipliers (ADMM).\r\n\r\n\r\nConvolutional Sparse Representations\r\n------------------------------------\r\n\r\nThe most significant contribution of this library is the inclusion of\r\nimplementations of recent efficient algorithms for convolutional\r\nsparse coding and dictionary learning. These algorithms are described\r\nin the papers\r\n\r\n* Brendt Wohlberg, \"[Efficient Convolutional Sparse Coding](http://brendt.wohlberg.net/publications/wohlberg-2014-efficient.html)\", in *Proceedings of IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP)*, (Florence, Italy), pp. 7173-7177, May 2014\r\n* Brendt Wohlberg, \"[Efficient Algorithms for Convolutional Sparse Representations](http://brendt.wohlberg.net/publications/wohlberg-2016-efficient.html)\", *IEEE Transactions on Image Processing*, vol. 25, no. 1, pp. 301-315, Jan 2016\r\n* Brendt Wohlberg, \"[Convolutional Sparse Representation of Color Images](http://brendt.wohlberg.net/publications/wohlberg-2016-convolutional.html)\", in *Proceedings of the IEEE Southwest Symposium on Image Analysis and Interpretation (SSIAI)*, (Santa Fe, NM, USA), Mar 2016\r\n* Brendt Wohlberg, \"[Convolutional Sparse Representations as an Image Model for Impulse Noise Restoration](http://brendt.wohlberg.net/publications/wohlberg-2016-convolutional2.html)\", in *Proceedings of the IEEE Image, Video, and Multidimensional Signal Processing Workshop (IVMSP)*, (Bordeaux, France), Jul 2016\r\n* Brendt Wohlberg, \"[Boundary Handling for Convolutional Sparse Representations](http://brendt.wohlberg.net/publications/wohlberg-2016-boundary.html)\", in *Proceedings of IEEE International Conference on Image Processing (ICIP)*, (Phoenix, USA), Sep 2016\r\n\r\nThis library has been used in a variety of signal and image processing\r\napplications of convolutional sparse coding methods, including \r\n\r\n* Brendt Wohlberg, \"[Endogenous Convolutional Sparse Representations for Translation Invariant Image Subspace Models](http://brendt.wohlberg.net/publications/wohlberg-2014-endogenous.html)\", in *Proceedings of IEEE International Conference on Image Processing (ICIP)*, (Paris, France), pp. 2859-2863, Oct 2014\r\n* Ping-Keng Jao, Yi-Hsuan Yang and Brendt Wohlberg, \"[Informed Monaural Source Separation of Music based on Convolutional Sparse Coding](http://brendt.wohlberg.net/publications/jao-2015-informed.html)\", in *Proceedings of IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP)*, (Brisbane, Australia), pp. 236-240, Apr 2015\r\n* Diego Carrera, Giacomo Boracchi, Alessandro Foi and Brendt Wohlberg, \"[Detecting Anomalous Structures by Convolutional Sparse Models](http://brendt.wohlberg.net/publications/carrera-2015-detecting.html)\", in *The International Joint Conference on Neural Networks (IJCNN)*, (Killarney, Ireland), pp. 1--8, Jul 2015\r\n* Andrea Cogliati, Zhiyao Duan and Brendt Wohlberg, \"[Piano Music Transcription with Fast Convolutional Sparse Coding](http://brendt.wohlberg.net/publications/cogliati-2015-piano.html)\", in *Proceedings of the IEEE International Workshop on Machine Learning for Signal Processing*, (Boston, MA, USA), pp. 1-6, Sep 2015\r\n* Ping-Keng Jao, Li Su, Yi-Hsuan Yang and Brendt Wohlberg, \"[Monaural Music Source Separation using Convolutional Sparse Coding](http://brendt.wohlberg.net/publications/jao-2016-monaural.html)\", *IEEE/ACM Transactions on Audio, Speech, and Language Processing*, 2016\r\n* Andrea Cogliati, Zhiyao Duan and Brendt Wohlberg, \"[Context-dependent Piano Music Transcription with Convolutional Sparse Coding](http://brendt.wohlberg.net/publications/cogliati-2016-context.html)\", *IEEE/ACM Transactions on Audio, Speech, and Language Processing*, 2016\r\n\r\n\r\nMatlab\r\n------\r\n\r\nA Matlab version of this library is\r\n[available](http://brendt.wohlberg.net/software/SPORCO/), but note\r\nthat future development will concentrate primarily on the Python version.\r\n\r\n\r\n\r\n\r\nRequirements\r\n------------\r\n\r\nThe primary requirements are Python itself, and modules\r\n[numpy](http://www.numpy.org), [scipy](https://www.scipy.org),\r\n[future](http://python-future.org),\r\n[pyfftw](https://hgomersall.github.io/pyFFTW), and\r\n[matplotlib](http://matplotlib.org). Module\r\n[numexpr](https://github.com/pydata/numexpr) is not required, but some\r\nfunctions will be faster if it is installed. If module\r\n[mpldatacursor](https://github.com/joferkington/mpldatacursor) is\r\ninstalled, function util.plot will support the data cursor that it\r\nprovides.\r\n\r\nInstallation of these requirements is system dependent. Under a recent\r\nversion of Ubuntu Linux, the following commands should be sufficient for\r\nPython 2\r\n\r\n    sudo apt-get install python-numpy python-scipy python-numexpr\r\n    sudo apt-get install python-matplotlib python-pip libfftw3-dev\r\n    sudo pip install future\r\n    sudo pip install pyfftw\r\n\r\nor Python 3\r\n\r\n    sudo apt-get install python3-numpy python3-scipy python3-numexpr\r\n    sudo apt-get install python3-matplotlib python3-pip libfftw3-dev \r\n    sudo pip3 install future\r\n    sudo pip3 install pyfftw\r\n\r\nSome additional dependencies are required for running the unit tests or\r\nbuilding the documentation from the package source. Under a recent\r\nversion of Ubuntu Linux, the following commands should be sufficient for\r\nPython 2\r\n\r\n    sudo apt-get install python-pytest python-numpydoc\r\n    sudo pip install pytest-runner\r\n    sudo pip install sphinxcontrib-bibtex\r\n\r\nor Python 3\r\n\r\n    sudo apt-get install python3-pytest python3-numpydoc\r\n    sudo pip3 install pytest-runner\r\n    sudo pip3 install sphinxcontrib-bibtex\r\n\r\nInstallation\r\n------------\r\n\r\nTo install the most recent release of SPORCO from\r\n[PyPI](https://pypi.python.org/pypi/sporco/) do\r\n\r\n    pip install sporco\r\n\r\nTo install the development version from\r\n[GitHub](https://github.com/bwohlberg/sporco) do\r\n\r\n    git clone git://github.com/bwohlberg/sporco.git\r\n\r\nfollowed by\r\n\r\n    cd sporco\r\n    python setup.py build\r\n    python setup.py install\r\n\r\nThe install command will usually have to be performed with root\r\npermissions.\r\n\r\nUsage\r\n-----\r\n\r\nScripts illustrating usage of the package can be found in the `examples`\r\ndirectory of the source distribution. These examples can be run from the\r\nroot directory of the package by, for example\r\n\r\n    python examples/demo_bpdn.py\r\n\r\nTo run these scripts prior to installing the package it will be\r\nnecessary to first set the `PYTHONPATH` environment variable to include\r\nthe root directory of the package. For example, in a `bash` shell\r\n\r\n    export PYTHONPATH=$PYTHONPATH:`pwd`\r\n\r\nfrom the root directory of the package.\r\n\r\nDocumentation\r\n-------------\r\n\r\nDocumentation is available online at [Read the\r\nDocs](http://sporco.rtfd.io/), or can be built from the root directory\r\nof the source distribution by the command\r\n\r\n    python setup.py build_sphinx\r\n\r\nin which case the HTML documentation can be found in the\r\n`build/sphinx/html` directory (the top-level document is `index.html`).\r\n\r\nLicense\r\n-------\r\n\r\nThis package is distributed with a BSD license; see the `LICENSE` file\r\nfor details.\r\n\r\nAcknowledgments\r\n---------------\r\n\r\nThanks to Aric Hagberg for valuable advice on python packaging,\r\ndocumentation, and related issues.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}